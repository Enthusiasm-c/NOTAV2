"""fix invoice relationships

Revision ID: 94631797fa74
Revises: 3b22e234a8e2
Create Date: 2025-04-28 05:07:00.385977+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '94631797fa74'
down_revision: Union[str, None] = '3b22e234a8e2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('invoice_items', sa.Column('name', sa.String(), nullable=False))
    op.alter_column('invoice_items', 'quantity',
               existing_type=sa.NUMERIC(),
               type_=sa.Float(),
               nullable=False)
    op.alter_column('invoice_items', 'price',
               existing_type=sa.NUMERIC(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('invoice_items', 'sum',
               existing_type=sa.NUMERIC(),
               type_=sa.Float(),
               existing_nullable=True)
    op.drop_constraint('invoice_items_invoice_id_fkey', 'invoice_items', type_='foreignkey')
    op.create_foreign_key(None, 'invoice_items', 'invoices', ['invoice_id'], ['id'])
    op.drop_column('invoice_items', 'match_confidence')
    op.drop_column('invoice_items', 'parsed_name')
    op.add_column('invoices', sa.Column('number', sa.String(), nullable=True))
    op.add_column('invoices', sa.Column('issued_at', sa.Date(), nullable=False))
    op.add_column('invoices', sa.Column('supplier', sa.String(), nullable=True))
    op.add_column('invoices', sa.Column('buyer', sa.String(), nullable=True))
    op.add_column('invoices', sa.Column('total_sum', sa.Float(), nullable=True))
    op.drop_column('invoices', 'raw_text')
    op.drop_column('invoices', 'date')
    op.drop_column('invoices', 'buyer_name')
    op.drop_column('invoices', 'supplier_name')
    op.drop_column('invoices', 'status')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('invoices', sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('supplier_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('buyer_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('date', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('raw_text', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_column('invoices', 'total_sum')
    op.drop_column('invoices', 'buyer')
    op.drop_column('invoices', 'supplier')
    op.drop_column('invoices', 'issued_at')
    op.drop_column('invoices', 'number')
    op.add_column('invoice_items', sa.Column('parsed_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('invoice_items', sa.Column('match_confidence', sa.NUMERIC(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'invoice_items', type_='foreignkey')
    op.create_foreign_key('invoice_items_invoice_id_fkey', 'invoice_items', 'invoices', ['invoice_id'], ['id'], ondelete='CASCADE')
    op.alter_column('invoice_items', 'sum',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('invoice_items', 'price',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(),
               existing_nullable=True)
    op.alter_column('invoice_items', 'quantity',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(),
               nullable=True)
    op.drop_column('invoice_items', 'name')
    # ### end Alembic commands ###
