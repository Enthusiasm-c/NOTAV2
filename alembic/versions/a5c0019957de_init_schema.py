"""init schema

Revision ID: a5c0019957de
Revises: 4c2b8ba4b25c
Create Date: 2025-04-28 06:37:56.643432+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a5c0019957de'
down_revision: Union[str, None] = '4c2b8ba4b25c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_name_lookup',
    sa.Column('alias', sa.String(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_product_name_lookup_product_id_products'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_name_lookup'))
    )
    op.create_index(op.f('ix_product_name_lookup_alias'), 'product_name_lookup', ['alias'], unique=True)
    op.create_index(op.f('ix_product_name_lookup_product_id'), 'product_name_lookup', ['product_id'], unique=False)
    op.drop_index('ix_invoice_name_lookup_parsed_name', table_name='invoice_name_lookup')
    op.drop_table('invoice_name_lookup')
    op.add_column('invoice_items', sa.Column('total', sa.Numeric(precision=14, scale=2), nullable=False))
    op.alter_column('invoice_items', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('invoice_items', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=12, scale=2),
               existing_nullable=False)
    op.drop_constraint('fk_invoice_items_product_id_products', 'invoice_items', type_='foreignkey')
    op.create_foreign_key(op.f('fk_invoice_items_product_id_products'), 'invoice_items', 'products', ['product_id'], ['id'], ondelete='RESTRICT')
    op.add_column('invoices', sa.Column('number', sa.String(), nullable=True))
    op.add_column('invoices', sa.Column('date', sa.Date(), nullable=False))
    op.drop_constraint('fk_invoices_supplier_id_suppliers', 'invoices', type_='foreignkey')
    op.create_foreign_key(op.f('fk_invoices_supplier_id_suppliers'), 'invoices', 'suppliers', ['supplier_id'], ['id'], ondelete='RESTRICT')
    op.drop_column('invoices', 'document_date')
    op.add_column('products', sa.Column('unit', sa.String(length=16), nullable=False))
    op.drop_constraint('uq_products_code', 'products', type_='unique')
    op.drop_column('products', 'uom')
    op.drop_column('products', 'code')
    op.drop_column('products', 'pack_qty')
    op.drop_column('products', 'cost')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('products', sa.Column('cost', sa.NUMERIC(precision=14, scale=2), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('pack_qty', sa.NUMERIC(precision=12, scale=4), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('code', sa.VARCHAR(length=64), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('uom', sa.VARCHAR(length=16), autoincrement=False, nullable=True))
    op.create_unique_constraint('uq_products_code', 'products', ['code'])
    op.drop_column('products', 'unit')
    op.add_column('invoices', sa.Column('document_date', sa.DATE(), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_invoices_supplier_id_suppliers'), 'invoices', type_='foreignkey')
    op.create_foreign_key('fk_invoices_supplier_id_suppliers', 'invoices', 'suppliers', ['supplier_id'], ['id'], ondelete='CASCADE')
    op.drop_column('invoices', 'date')
    op.drop_column('invoices', 'number')
    op.drop_constraint(op.f('fk_invoice_items_product_id_products'), 'invoice_items', type_='foreignkey')
    op.create_foreign_key('fk_invoice_items_product_id_products', 'invoice_items', 'products', ['product_id'], ['id'], ondelete='SET NULL')
    op.alter_column('invoice_items', 'price',
               existing_type=sa.Numeric(precision=12, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
    op.alter_column('invoice_items', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('invoice_items', 'total')
    op.create_table('invoice_name_lookup',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('parsed_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='fk_invoice_name_lookup_product_id_products'),
    sa.PrimaryKeyConstraint('id', name='pk_invoice_name_lookup')
    )
    op.create_index('ix_invoice_name_lookup_parsed_name', 'invoice_name_lookup', ['parsed_name'], unique=True)
    op.drop_index(op.f('ix_product_name_lookup_product_id'), table_name='product_name_lookup')
    op.drop_index(op.f('ix_product_name_lookup_alias'), table_name='product_name_lookup')
    op.drop_table('product_name_lookup')
    # ### end Alembic commands ###
